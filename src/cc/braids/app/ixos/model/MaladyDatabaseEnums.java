package cc.braids.app.ixos.model;

import java.io.Serializable;
import java.util.*;

import cc.braids.util.*;

import static cc.braids.app.ixos.model.MaladyDatabaseEnums.MaladyIlk.DRUG_OR_ALCOHOL_EMERGENCY;
import static cc.braids.util.UFunctions.*;

@SuppressWarnings("unused")
public interface MaladyDatabaseEnums extends Serializable {
	public enum MaladyIlk implements HasReprMethod {
		ACUTE_ABDOMEN,
		ACUTE_MYOCARDIAL_INFARCTION,
		ACUTE_PULMONARY_EDEMA,
		ANAPHYLAXIS_EARLY,
		ANGINA_PECTORIS,
		ANGINA_PECTORIS_FEMALE_DIABETIC_OR_GERIATRIC,
		ANGINA_PECTORIS_MALE_NONDIABETIC_YOUNGER,
		AORTIC_ANEURYSM_OR_DISSECTION,
		APPEARS_DRUNK,
		APPENDICITIS,
		APPENDICITIS_IN_COMPENSATED_SHOCK,
		APPENDICITIS_IN_DECOMPENSATED_SHOCK,
		BRAIN_CELL_DYSFUNCTION,
		CARDIOGENIC_ACUTE_PULMONARY_EDEMA,
		CHOLECYSTITIS,
		CHRONIC_BRONCHITIS,
		CNS_DEPRESSANT_EMERGENCY,
		CNS_STIMULANT_EMERGENCY,
		COMPENSATED_ANAPHYLACTIC_SHOCK,
		COMPENSATED_DISTRIBUTIVE_SHOCK,
		COMPENSATED_HYPOVOLEMIC_SHOCK,
		COMPENSATED_SHOCK,
		COPD,
		DECOMPENSATED_ANAPHYLACTIC_SHOCK,
		DECOMPENSATED_DISTRIBUTIVE_SHOCK,
		DECOMPENSATED_HYPOVOLEMIC_SHOCK,
		DECOMPENSATED_SHOCK,
		DRUG_OR_ALCOHOL_EMERGENCY,
		DRUG_WITHDRAWAL_EMERGENCY,
		DYSPNEA,
		EMPHYSEMA,
		EPINEPHRINE_RELEASE,
		HALLUCINOGEN_EMERGENCY,
		HEART_FAILURE,
		HYPERTENSIVE_EMERGENCY,
		HYPERTENSIVE_EMERGENCY_DIASTOLIC,
		HYPERTENSIVE_EMERGENCY_SYSTOLIC,
		HYPERVENTILATION_SYNDROME,
		HYPOGLYCEMIA,
		HYPOGLYCEMIA_ALERT,
		HYPOGLYCEMIA_LOW_MENTAL_STATUS,
		IRREVERSIBLE_SHOCK,
		MILD_ALLERGIC_REACTION,
		NARCOTIC_EMERGENCY,
		NONCARDIOGENIC_ACUTE_PULMONARY_EDEMA,
		PANCREATITIS,
		PANCREATITIS_IN_COMPENSATED_SHOCK,
		PANCREATITIS_IN_DECOMPENSATED_SHOCK,
		PERITONITIS,
		PNEUMONIA,
		PNEUMONIA_GERIATRIC,
		PULMONARY_EMBOLISM,
		PULMONARY_EMBOLISM_IN_COMPENSATED_SHOCK,
		PULMONARY_EMBOLISM_IN_DECOMPENSATED_SHOCK,
		SHOCK,
		SPONTANEOUS_PNEUMOTHORAX,
		STROKE,
		SYNCOPE,
		TRAUMA_MUSCLE_STRAIN,
		UNSTABLE_ANGINA,
		UNSTABLE_ANGINA_FEMALE_DIABETIC_OR_GERIATRIC,
		UNSTABLE_ANGINA_MALE_NONDIABETIC_YOUNGER,
		VOLATILE_INHALANT_EMERGENCY,
		;
		@Override public String __repr__() { return toString(); }

	}
		
	public enum CategoryIlk {
		MEDICAL_ABDOMINAL,
		MEDICAL_AMS,
		MEDICAL_CHEST_PAIN,
		MEDICAL_RESPIRATORY,
		MEDICAL_TOXICOLOGY,
		SHOCK_AND_RESUSCITATION,
		TRAUMA_MUSCULOSKELETAL,
		FOR_INTERNAL_USE_ONLY
	}

	/**
	 * A scenario may not have more than one finding with the same FindingIlkSpecies.
	 */
	public enum FindingIlkSpecies implements HasReprMethod {
		AGE,
		APPETITE,
		AVPU,
		BP_SYSTOLIC,
		BP_DIASTOLIC,
		BREATHING_RATE,
		BREATHING_QUALITY,
		BREATHING_RHYTHM, // e.g., regular or irregular
		BUILD_WEIGHT,
		MOOD,
		NASAL_DISCHARGE,
		POSTURE,
		PULSE_RATE,
		PULSE_QUALITY,
		//PULSE_RHYTHM,  // ir/regular
		PUPIL_SIZE,
		PUPIL_REACTIVITY,
		SEX,
		SKIN_COLOR,
		SKIN_TEMPERATURE,
		SPEECH_COHERENCE,
		SPO2,
		SWALLOWING,
		TEMPERATURE,
		;
		
		@Override public String __repr__() { return toString(); }
	
	}
	
	public enum LikelihoodIlk {
		// No value is less than 0.25.
		// No value is greater than 0.75, with the exception of DEFINITIVE.
		DEFAULT_LIKELIHOOD(0.50f),
		IN_EXTREME_CASES (0.25f),
		RARE (0.25f),  // "or even"
		IN_SEVERE_CASES (0.25f),
		UNUSUAL (0.25f),
		LESS_FREQUENT (0.33f),
		POSSIBLE (0.50f),
		CAN (0.50f),
		MAY (0.50f),
		SOMETIMES (0.50f),
		MANY (0.52f),
		MORE (0.54f),
		MOST (0.56f),
		COMMON (0.58f),
		MORE_COMMON (0.60f),
		FREQUENT (0.62f),
		OFTEN (0.64f),
		MORE_FREQUENT (0.66f),
		MOST_COMMON (0.68f),
		MOST_FREQUENTLY (0.70f),
		GENERALLY (0.75f),
		USUALLY (0.75f),
		CLASSIC (0.75f),
		HALLMARK (0.75f),
		STRONGLY_SUGGESTIVE (0.75f),
		KEY (0.75f),
		DEFINITIVE (1.00f);
		
		private float probability;

		LikelihoodIlk(float probability) {
			this.probability = probability;
		}
		
		LikelihoodIlk() {
			this.probability = 0.50f;
		}
		
		public float getProbability() {
			return this.probability;
		}
	}
	
	public enum OnsetIlk implements HasReprMethod {
		CHRONIC,
		EARLY,
		GREATER_THAN_5_HOURS_AGO,
		LATE,
		LESS_THAN_15_MINUTES_AGO,
		LESS_THAN_20_MINUTES_AGO,
		LESS_THAN_5_HOURS_AGO,
		MORE_THAN_10_MINUTES_AGO,
		RAPID,
		RECENT,
		SUDDEN,
		SUDDEN_MORE_COMMONLY_AT_NIGHT,
		THREE_OR_MORE_MONTHS_AGO,
		TWO_OR_MORE_YEARS_AGO,
		;
		@Override public String __repr__() { return toString(); }

	}
		
	public enum PalliProvocationIlk implements HasReprMethod {
		WORSE_WHEN_BREATHING_DEEPLY_OR_COUGHING,
		WORSE_WHEN_EXERTING,
		;
		@Override public String __repr__() { return toString(); }

	}

	public enum QualityIlk implements HasReprMethod {
		ACHING,
		ACHING_CRUSHING_HEAVY_PRESSURE_OR_TIGHTNESS,
		COARSE,
		CRAMP,
		DISCOMFORT,
		DULL_OR_DIFFUSE,
		GENERAL, // opposite of LOCALIZED
		LOCALIZED,
		MINIMALLY_PRODUCTIVE,
		PRESSURE,
		PRODUCTIVE_WITH_EXCESSIVE_AMMOUNT_OF_MUCUS,
		RIPPING_OR_TEARING,
		SHARP,
		SHARP_OR_STABBING,
		SQUEEZING,
		TIGHTNESS,
		VIGOROUS_AND_PRODUCTIVE,
		;
		@Override public String __repr__() { return toString(); }

	}
		
	public enum RadiationIlk implements HasReprMethod {
		ARM_BACK_EPIGASTRIUM_OR_JAW,
		BACK,
		BACK_AND_SHOULDERS,
		PRESENT_THROUGHOUT_ALL_LUNG_FIELDS,
		WIDESPREAD,
		;
		@Override public String __repr__() { return toString(); }

	}
		
	public enum SeverityIlk implements HasReprMethod {
		DRASTICALLY_INCREASED,
		EXTREME,
		GREATER_THAN_20,
		MILD,
		MILD_TO_MODERATE,
		PROFUSE,
		SEVERE,
		SIGNIFICANT,
		SLIGHT,
		VERY_SLIGHT,
		;
		@Override public String __repr__() { return toString(); }

	}

	public enum TreatmentIlk implements HasReprMethod {
		// While asking a question is technically not a treatment, the best
		// questions to ask vary widely by the malady suspected.
		//
		// Format: After the word ASK, the next word must be HX, RX, an
		// interrogative pronoun (how, where, etc.), or, as a last resort, IF.
		//
		ASK_HX_ATRIAL_FIBRILLATION,
		ASK_HX_HYPERTENSION,
		ASK_HX_IRREGULAR_HEARTBEAT,
		ASK_HX_SUBSTANCE_ABUSE, // is this HX or event?  assuming HX, because HX implies event
		ASK_IF_ONSET_WAS_GRADUAL,
		ASK_IF_SX_AFFECTED_ONE_PART_OF_THE_BODY_FIRST_AND_THEN_PROGRESSED_TO_OTHER_AREAS,
		ASK_IF_SX_PROGRESSIVELY_GOT_WORSE,
		ASK_WHEN_LAST_DOSE_SUBSTANCE_ABUSED,
		ASK_RX_ANTICOAGULANTS,
		ASK_WHICH_SUBSTANCE_ABUSED,
		ASK_HOW_MUCH_SUBSTANCE_ABUSED,
		ASK_LAST_TIME_SUBSTANCE_ABUSED,
		ASK_IF_ANTIDOTE_ATTEMPTED,
		ASK_IF_ALCOHOL_ALSO_INGESTED,

		ADVISE_OF_SERIOUS_CONSEQUENCES_OF_REFUSAL, // especially true of syncope
		ASPIRIN,
		CALM_PATIENT,
		CHECK_BLOOD_GLUCOSE,
		CONSIDER_ALS,
		CONSIDER_ELEVATING_LEGS_8_TO_12_INCHES,
		REQUEST_ALS,
		DETERMINE_IF_BP_IS_HISTORICALLY_NORMAL,
		DISABLE_OR_REMOVE_POP_OFF_RELIEF_VALUE_FROM_BVM,
		DISTANCE_PATIENT_FROM_SOURCE_OF_ANXIETY,
		ENCOURAGE_PATIENT_TO_BREATHE_SLOWLY,
		ENCOURAGE_PATIENT_TO_REST,
		EPINEPHRINE_AUTO_INJECTOR,
		EXTRA_EMOTIONAL_SUPPORT,
		GLUCOSE,
		INSPECT_MUCOUS_MEMBRANES_IN_MOUTH,
		INSTRUCT_PATIENT_TO_BREATHE_ONLY_THROUGH_NOSE,
		KEEP_PATIENT_WARM,
		MINIMIZE_TIDAL_VOLUME_IF_VENTILATING,
		MONITOR_FOR_PROGRESSION_TO_ANAPHYLAXIS,
		NITROGLYCERIN,
		NOTIFY_HOSPITAL_EARLY,
		O2_AT_LEAST_2_LPM,
		O2_AT_15_LPM,
		O2_USING_STROKE_RECOMMENDATIONS,
		//OROPHARYNGEAL_OR_NASOPHARYNGEAL_AIRWAY,
		POSITION_FOWLERS,
		POSITION_LATERAL_RECUMBENT,
		POSITION_OF_COMFORT,
		POSITION_OF_COMFORT_BUT_ENCOURAGE_SEMI_FOWLER_POSITION_IF_NO_AIRWAY_CONCERNS,
		POSITION_OF_COMFORT_UNLESS_VOMITING_OR_AMS_IWC_LATERAL_RECUMBENT,  // IWC = in which case
		POSITION_SUPINE,
		POSITION_USING_STROKE_RECOMMENDATIONS,
		PPV_IF_SEVERELY_DISORIENTED_OR_UNRESPONSIVE,
		PROTECT_PARALYZED_EXTREMITIES,
		RAPID_TRANSPORT,
		RAPID_TRANSPORT_TO_STROKE_CENTER,
		STANDARD_SUPPORTIVE_TREATMENT_ONLY,  // in other words, nothing special
		;
		@Override public String __repr__() { return toString(); }

	}

}
